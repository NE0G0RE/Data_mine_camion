export declare const AUDIT_ACTIONS: readonly ["create", "read", "update", "delete", "login", "logout", "password_change", "permission_grant", "permission_revoke", "role_assign", "role_revoke", "feature_toggle", "settings_update", "import_data", "export_data"];
export declare const AUDIT_ENTITY_TYPES: readonly ["user", "role", "feature", "permission", "truck", "filiale", "settings"];
export declare const auditLogs: import("drizzle-orm/mysql-core").MySqlTableWithColumns<{
    name: "audit_logs";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "id";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlVarChar";
            data: string;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "user_id";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlVarChar";
            data: string;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        action: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "action";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "create" | "read" | "update" | "delete" | "login" | "logout" | "password_change" | "permission_grant" | "permission_revoke" | "role_assign" | "role_revoke" | "feature_toggle" | "settings_update" | "import_data" | "export_data";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["create", "read", "update", "delete", "login", "logout", "password_change", "permission_grant", "permission_revoke", "role_assign", "role_revoke", "feature_toggle", "settings_update", "import_data", "export_data"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        entityType: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "entity_type";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "filiale" | "user" | "role" | "feature" | "permission" | "truck" | "settings";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["user", "role", "feature", "permission", "truck", "filiale", "settings"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        entityId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "entity_id";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        entityName: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "entity_name";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        oldValues: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "old_values";
            tableName: "audit_logs";
            dataType: "json";
            columnType: "MySqlJson";
            data: unknown;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        newValues: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "new_values";
            tableName: "audit_logs";
            dataType: "json";
            columnType: "MySqlJson";
            data: unknown;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ipAddress: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "ip_address";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userAgent: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "user_agent";
            tableName: "audit_logs";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        metadata: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "metadata";
            tableName: "audit_logs";
            dataType: "json";
            columnType: "MySqlJson";
            data: unknown;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "created_at";
            tableName: "audit_logs";
            dataType: "date";
            columnType: "MySqlDateTime";
            data: Date;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "mysql";
}>;
export type AuditLog = typeof auditLogs.$inferSelect;
export type NewAuditLog = typeof auditLogs.$inferInsert;
export type AuditAction = typeof AUDIT_ACTIONS[number];
export type AuditEntityType = typeof AUDIT_ENTITY_TYPES[number];
export interface AuditLogData {
    action: AuditAction;
    entityType: AuditEntityType;
    entityId?: string;
    entityName?: string;
    oldValues?: Record<string, any>;
    newValues?: Record<string, any>;
    ipAddress?: string;
    userAgent?: string;
    metadata?: Record<string, any>;
}
//# sourceMappingURL=audit.schema.d.ts.map